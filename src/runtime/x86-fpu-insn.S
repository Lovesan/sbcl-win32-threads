/*    
      This file was autogenerated by a simple Lisp function that you may
      rewrite on your own in ten minutes or less. Its content is included
      into .text section; in :sb-auto-fpu-switch configurations on X86
      platform, SBCL runtime uses it to replay failed FPU operations.
      
      When floating stack overflow or underflow is detected, exception
      handler resets FPU to one of the two predefined states: either a state
      required by SBCL, where no registers are empty, or a state expected by
      C, where no registers are valid.
      
      When an ordinary CPU instruction fails, exception handler restarts it
      merely by returning ExceptionContinueExecution. This approach doesn't
      work with X87 FPU instructions: FPU works in the background, and when
      the main CPU is reached by the exception, its EIP (and control folw)
      is already several steps ahead the failed FPU instruction itself.
      
      It's possible, however, to imitate the effect of failed FPU
      instruction restart. FPU makes it possible by remembering failed
      instruction address _and_ its operand address (the latter is a result
      of EA calculation, not the prerequisites; something like 0x1234560,
      not something like 0x10000000(%eax,2)).
      
      FPU opcode belongs to one of the two classes: either it has ``Mod
      r/m'' field describing the operand location, or it has no memory
      operand. Instruction class is recognized easily by examining its
      opcode.
      
      Regular X87 opcodes begin with a prefix byte in [#xD8-#xDF], with at
      least one more byte after it. If two highest bits of that second byte
      are both set, the instruction doesn't fetch memory; otherwise the
      second byte has Mod R/M fields (and some data may follow it).
      
      When no memory operand reference is required, Mod R/M fields don't
      consume opcode space. Consequently, for each prefix byte, FPU has up
      to 64 non-modR/M instructions above #xC0, and up to 8 modR/M
      instructions below.
      
      Instruction without a memory operand may be restarted directly;
      executing similar opcode is enough. For Mod R/M instructions, we jump
      to a similar opcode, but with Mod R/M fields adjusted to
      describe (%EAX). Operand address is loaded into %EAX before the jump.
      This way, the effect of the instruction described by the pair of
      opcode and operand is successfully replayed, as if it were restared in
      a usual way.
      
      This file contains appropiate FPU opcodes.  For each FPU
      prefix (#xD8-#xDF) it contains 8 mod r/m opcodes (targetting (%EAX))
      and 64 non-memory opcodes. Each FPU opcode is followed by a jump:
      control is transferred to Lfinish (code labelled by this name
      implements a returning half of a bizarre "calling convention"; see
      its client (caller) somewhere around handle_exception).
 */

.align 16,0x90

.globl GNAME(fpu_insns_modrm)
GNAME(fpu_insns_modrm):
        .align 8,0x90 ;  .byte 0xD8, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0x38;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x00;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x08;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x10;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x18;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x20;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x28;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x30;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0x38;  nop;  jmp Lfinish

.align 8,0x90

.globl GNAME(fpu_insns_high)
GNAME(fpu_insns_high):
        .align 8,0x90 ;  .byte 0xD8, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD8, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xD9, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDA, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDB, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDC, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDD, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDE, 0xFF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xC9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xCA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xCB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xCC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xCD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xCE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xCF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xD9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xDA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xDB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xDC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xDD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xDE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xDF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xE9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xEA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xEB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xEC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xED;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xEE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xEF;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF0;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF1;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF2;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF3;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF4;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF5;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF6;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF7;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF8;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xF9;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xFA;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xFB;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xFC;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xFD;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xFE;  nop;  jmp Lfinish
        .align 8,0x90 ;  .byte 0xDF, 0xFF;  nop;  jmp Lfinish
        .align 16,0x90
Lfinish:
         mov 8(%ebp),%eax
         push %eax
         mov 4(%ebp),%eax
         mov (%ebp),%ebp
              
         ret
